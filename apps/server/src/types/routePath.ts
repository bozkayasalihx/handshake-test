import { UserTypes } from ".";

export enum ParentRoutes {
    ROOT_ROUTE = "/",
    VENDORS = "/vendor",
    VENDOR_REGIONS = "/vendor-region",
    BUYERS = "/buyer",
    BUYER_SITES = "/buyer-site",
    DEALERS = "/dealer",
    DEALER_SITES = "/dealer-site",
    RELATIONS = "/relations",
    DEPOSITS = "/deposit",
    ADVANCES = "/advance",
    FILE_UPLOAD = "/file-upload",
    STATIC = "/static",
    USERROUTE = "/user",
    PRODUCT = "/product",
    INVOICE = "/invoice",
    VDSBS = "/vdsbs",
    PAYMENT = "/payment",
}

export enum Routes {
    REGISTER = "/register",
    LOGIN = "/login",
    ME = "/me",
    VENDOR_REGISTER = "/vendor-register",
    RESET_PASSWORD = "/reset-password",
    FORGOT_PASSWORD = "/forgot-password",
    REFRESH_TOKEN = "/refresh-token",
    PROCESS_INVOICE_UPLOAD = "/process-invoice-upload",
    PROCESS_PS_UPLOAD = "/process-ps-upload",
    CREATE_VENDOR = "/create-vendor",
    CREATE_VENDOR_REGION = "/create-vendor-region",
    CREATE_BUYER = "/create-buyer",
    CREATE_BUYER_SITE = "/create-buyersite",
    CREATE_DEALER = "/create-dealer",
    CREATE_DEALER_SITE = "/create-dealersite",
    CREATE_VDS_RELATION = "/vds-relations",
    CREATE_VDSBS_RELATION = "/vdsbs-relations",
    CREATE_USER_ENTITY = "/create-user-entity",
    CREATE_DEALER_USER_ROUTE = "/create-dealer-user-route",
    CREATE_DEPOSIT = "/create-deposit",
    UPDATE_DEPOSIT = "/update-deposit",
    GET_DEPOSIT = "/list-deposits",
    CREATE_ADVANCE = "/create-advance",
    CREATE_INVOICE = "/create-invoice",
    CREATE_INVOICE_LINE = "/create-invoice_line",
    CREATE_PAYMENT_SCHEDULE = "/create-payment-schedule",
    CREATE_PAYMENT = "/create-payment",
    CREATE_PRODUCT = "/create-product",
    UPDATE_PRODUCT = "/update-product",
    GET_PRODUCT = "/list-product",
    UPDATE_INVOICE = "/update-invoice",
    GET_INVOICE = "/list-invoices",
    GET_ADVANCE = "/list-advances",
    UPDATE_ADVANCE = "/update-advance",
    LIST_AUTHORITY = "/list-authority",
    LIST_AVAILABLE_PS = "/list-available-ps",
    PROCESS_PS = "/process-payments",
    LIST_PAYMENT_APPROVALS = "/list-payment-approvals",
    PROCESSS_APPROVALS = "/process-approvals",
}

export const accesableRoute = new Map<string, Array<string>>();
accesableRoute.set(UserTypes.BUYER_ADMIN, [
    ParentRoutes.USERROUTE,
    ParentRoutes.BUYERS,
    ParentRoutes.BUYER_SITES,
    ParentRoutes.INVOICE,
    ParentRoutes.PRODUCT,
    ParentRoutes.DEPOSITS,
    ParentRoutes.ADVANCES,
    ParentRoutes.VDSBS,
    ParentRoutes.PAYMENT,
]);
accesableRoute.set(UserTypes.DEALER_ADMIN, [
    ParentRoutes.DEALERS,
    ParentRoutes.USERROUTE,
    ParentRoutes.FILE_UPLOAD,
    ParentRoutes.ADVANCES,
    ParentRoutes.DEALER_SITES,
    ParentRoutes.INVOICE,
    ParentRoutes.PRODUCT,
    ParentRoutes.DEPOSITS,
    ParentRoutes.ADVANCES,
    ParentRoutes.VDSBS,
    ParentRoutes.PAYMENT,
]);
accesableRoute.set(UserTypes.VENDOR_ADMIN, [
    ParentRoutes.VENDORS,
    ParentRoutes.USERROUTE,
    ParentRoutes.VENDOR_REGIONS,
    ParentRoutes.RELATIONS,
    ParentRoutes.FILE_UPLOAD,
    ParentRoutes.PRODUCT,
    ParentRoutes.VDSBS,
]);
accesableRoute.set(UserTypes.BUYER, [
    ParentRoutes.BUYER_SITES,
    ParentRoutes.USERROUTE,
    ParentRoutes.INVOICE,
    ParentRoutes.PRODUCT,
    ParentRoutes.DEPOSITS,
    ParentRoutes.ADVANCES,
    ParentRoutes.VDSBS,
    ParentRoutes.PAYMENT,
]);
accesableRoute.set(UserTypes.DEALER, [
    ParentRoutes.DEALER_SITES,
    ParentRoutes.FILE_UPLOAD,
    ParentRoutes.USERROUTE,
    ParentRoutes.INVOICE,
    ParentRoutes.PRODUCT,
    ParentRoutes.DEPOSITS,
    ParentRoutes.ADVANCES,
    ParentRoutes.VDSBS,
    ParentRoutes.PAYMENT,
]);
accesableRoute.set(UserTypes.VENDOR, [
    ParentRoutes.VENDORS,
    ParentRoutes.VENDOR_REGIONS,
    ParentRoutes.USERROUTE,
    ParentRoutes.RELATIONS,
    ParentRoutes.PRODUCT,
    ParentRoutes.VDSBS,
]);
